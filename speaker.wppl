var speechCost = 0
var pointCost = 70
var successValue = 100

var invLogit = function(x) {
  return Math.exp(x) / (1+Math.exp(x))
}

var knowProb = function(exposure) {
  return invLogit(-.4252 + 1.1487*Math.log2(exposure))
}


var exposure = 1

var actions = ['speak', 'point'];

var outcome = function(action, exposure) {
  var outcomes = ['point_success', 'speak_success', 'failure'];
  var successProbs = (action === 'speak') ? 
      [0, knowProb(exposure), 1 - knowProb(exposure)] : [1, 0, 0]
  return categorical(successProbs, outcomes);
};

var utility = function(outcome) {
  var table = { 
    point_success: successValue - pointCost, 
    speak_success: successValue - speechCost,
    failure: 0,
  };
  return table[outcome];
};

var sampleSpeaker = function() {
  return Infer({ 
    model() {

      var action = uniformDraw(actions);
      
      var expectedUtility = function(action) {
        return expectation(Infer({ 
          model() {
            return utility(outcome(action, exposure));
          }
        }));
      };
      
      factor(Math.log(expectedUtility(action)));
      
      return action;
    }
  });
};


repeat(1000, function() { sample(sampleSpeaker())})


//repeat(10,speakerProduces)